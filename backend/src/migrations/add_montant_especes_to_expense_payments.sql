-- Migration pour ajouter montant_especes Ã  la table expense_payments
-- Cette colonne est nÃ©cessaire pour gÃ©rer les paiements mixtes (chÃ¨que + espÃ¨ces)

-- Ajouter la colonne montant_especes Ã  la table expense_payments
ALTER TABLE expense_payments 
ADD COLUMN IF NOT EXISTS montant_especes DECIMAL DEFAULT 0 CHECK (montant_especes >= 0);

-- Ajouter un commentaire pour la documentation
COMMENT ON COLUMN expense_payments.montant_especes IS 'Montant en espÃ¨ces pour les paiements mixtes (chÃ¨que + espÃ¨ces)';

-- Mettre Ã  jour les contraintes existantes pour inclure montant_especes
-- Supprimer l'ancienne contrainte
ALTER TABLE expense_payments DROP CONSTRAINT IF EXISTS check_montant_coherence;

-- Ajouter une nouvelle contrainte qui inclut montant_especes
ALTER TABLE expense_payments 
ADD CONSTRAINT check_montant_coherence_with_especes 
CHECK (
  montant_paye = montant_declare + montant_non_declare AND
  (
    (mode_paiement = 'espece' AND montant_especes = montant_paye) OR
    (mode_paiement = 'cheque' AND montant_especes = 0) OR
    (mode_paiement = 'cheque_espece' AND montant_especes >= 0) OR
    (mode_paiement = 'virement' AND montant_especes = 0)
  )
);

-- Mettre Ã  jour les donnÃ©es existantes
-- Pour les paiements existants avec mode_paiement = 'espece', mettre montant_especes = montant_paye
UPDATE expense_payments 
SET montant_especes = montant_paye 
WHERE mode_paiement = 'espece';

-- Pour les autres modes, laisser montant_especes = 0 (dÃ©jÃ  par dÃ©faut)

-- Message de confirmation
DO $$
BEGIN
  RAISE NOTICE 'âœ… Colonne montant_especes ajoutÃ©e Ã  expense_payments avec succÃ¨s !';
  RAISE NOTICE 'ğŸ“Š DonnÃ©es existantes mises Ã  jour pour les paiements en espÃ¨ces';
END $$;
